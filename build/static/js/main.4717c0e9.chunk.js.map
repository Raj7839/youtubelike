{"version":3,"sources":["Components/SearchBar.js","api/youtubeapi.js","Components/VideoItem.js","Components/VideoList.js","Components/VideoDetails.js","Components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","e","preventDefault","_this","setState","target","value","onSubmitEvent","props","onTermSubmit","react_default","a","createElement","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","_ref","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","src_Components_VideoItem","id","videoId","VideoDetails","videoSrc","concat","description","channelTitle","publishedAt","liveBroadcastContent","App","seletedvideo","_callee","response","regenerator_default","wrap","_context","prev","next","youtubeapi","get","q","sent","data","items","selectedVideo","console","log","stop","Components_SearchBar","Components_VideoDetails","Components_VideoList","ReactDOM","render","Components_App","document","querySelector"],"mappings":"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","file":"static/js/main.4717c0e9.chunk.js","sourcesContent":["import React from 'react';\n\n\n\n\nclass SearchBar extends React.Component{\n    state={term:''}\n\n    onInputChange = (e) => {\n        e.preventDefault();\n        this.setState({term:e.target.value});\n    }\n\n    onSubmitEvent=(e)=>{\n        e.preventDefault();\n\n        this.props.onTermSubmit(this.state.term)\n\n    }\n\n    render(){\n        return(\n            <div className=\"search-bar ui segment\">\n                <form className='ui form' onSubmit={this.onSubmitEvent}>\n                    <div className=\"field\">\n                        <label> Search Videos </label>\n                        <input type='text' value={this.state.term} onChange={this.onInputChange} />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import axios from 'axios';\n\n\nconst KEY='AIzaSyACtK0qEp4ETZ3Jn4sJQ2dsUkVX_3Z9ek8'\n\nexport default axios.create({\n    baseURL : 'https://www.googleapis.com/youtube/v3',\n    params:{\n        part:'snippet',\n        maxResults : 20,\n        key:KEY\n    }\n})","import React from 'react';\nimport './VideoItem.css'\n\nconst VideoItem = ({video, onVideoSelect}) => {\n  return (\n      <div onClick={() => onVideoSelect(video)} className=\" video-item item\">\n        <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.medium.url}/>\n        <div className=\"content\">\n          <div className=\"header\">\n            {video.snippet.title}\n          </div>\n        </div>\n      \n      </div>\n  );\n}\n\nexport default VideoItem;","import React from 'react';\nimport VideoItem from './VideoItem';\n\nconst VideoList = ({videos,onVideoSelect}) => {\n    const renderedList = videos.map((video)=> {\n        return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video}/>;\n    });\n    return (\n        <div className=\"ui relaxed divided list\">\n            {renderedList}\n        </div>\n        );\n}\n\nexport default VideoList;","import React from 'react';\n\nconst VideoDetails = ({video}) => {\n    if(!video){\n        return <div>LOADING...</div>\n    }else{\n        const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\n        return (\n            <div>\n                <div className=\"ui embed\">\n                    <iframe src={videoSrc} />\n                </div>\n                <div className=\"ui segment\">\n                    <div className=\"ui header\">{video.snippet.title}</div>\n                    <p className=\"ui paragraph\">{video.snippet.description}</p>\n                    <h3>Channel Title : {video.snippet.channelTitle}</h3>\n                    <p>Published At : {video.snippet.publishedAt}</p>\n                    <p>BroadCast Content : {video.snippet.liveBroadcastContent}</p>\n                </div>\n            </div> \n        )\n    }\n}\n\nexport default VideoDetails;","import React from 'react';\nimport SearchBar from './SearchBar'\nimport youtubeapi from '../api/youtubeapi'; \nimport VideoList from './VideoList';\nimport VideoDetails from './VideoDetails';\n\nclass App extends React.Component{\n\n    state={ videos : [], seletedvideo:null};\n\n    componentDidMount(){\n        this.onTermSubmit('Motivation Videos USA')\n    }\n\n    onTermSubmit= async term => {\n        \n        const response = await youtubeapi.get('/search',{\n            params : {\n                q:term\n            }\n        });\n\n        this.setState({videos:response.data.items, selectedVideo:response.data.items[0]})\n\n        console.log(this.state.videos)\n\n    }\n\n    onVideoSelect=(video)=>{\n        this.setState({selectedVideo : video})\n    }\n\n    render(){\n        return(\n            <div className = \"ui container\">\n                <SearchBar onTermSubmit = {this.onTermSubmit}/>\n                <div className=\"ui grid\">\n                    <div className=\"ui row\">\n                        <div className=\"eleven wide column\">\n                            <VideoDetails video = {this.state.selectedVideo} />\n                        </div>\n                        <div className=\"five wide column\">\n                            <VideoList onVideoSelect={this.onVideoSelect} videos = { this.state.videos } />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}